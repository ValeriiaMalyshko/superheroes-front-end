{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38097\\\\Documents\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\Filter\\\\Filter.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Filter(_ref) {\n  let {\n    value,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [\"Find contacts by name\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"filter\",\n      pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n      title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      required: true,\n      value: value,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Filter;\nContact.propTypes = {\n  filter: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/38097/Documents/goit-react-hw-02-phonebook/src/components/Filter/Filter.js"],"names":["React","PropTypes","Filter","value","onChange","Contact","propTypes","filter","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,SAASC,MAAT,OAAqC;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AAClD,sBACE;AAAA,qDAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAC,wHAHV;AAIE,MAAA,KAAK,EAAC,wIAJR;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,KAAK,EAAED,KANT;AAOE,MAAA,QAAQ,EAAEC;AAPZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;KAfuBF,M;AAgBxBG,OAAO,CAACC,SAAR,GAAoB;AAClBC,EAAAA,MAAM,EAAEN,SAAS,CAACO,MAAV,CAAiBC;AADP,CAApB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\nContact.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}