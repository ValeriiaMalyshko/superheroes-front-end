{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38097\\\\Documents\\\\goit-react-hw-04-phonebook\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import React, { Component } from 'react';\n\nimport { nanoid } from 'nanoid';\nimport Form from './Form/Form';\nimport ContactList from './Contacts/ContactList';\nimport Section from './Section/Section';\nimport Filter from './Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [contacts, setContacts] = useState([{\n    id: 'id-1',\n    name: 'Rosie Simpson',\n    number: '459-12-56'\n  }, {\n    id: 'id-2',\n    name: 'Hermione Kline',\n    number: '443-89-12'\n  }, {\n    id: 'id-3',\n    name: 'Eden Clements',\n    number: '645-17-79'\n  }, {\n    id: 'id-4',\n    name: 'Annie Copeland',\n    number: '227-91-26'\n  }]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (contacts) {\n      setContacts(contacts);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  function formSubmitHendler(contact) {\n    const newContact = {\n      id: nanoid(),\n      name: contact.name,\n      number: contact.number\n    };\n    console.log(newContact);\n\n    if (contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase())) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    setContacts([newContact, ...contacts]);\n  }\n\n  function changeFilter(e) {\n    setFilter(e.currentTarget.value);\n  }\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  const deleteCont = id => {\n    setContacts(contacts.filter(contact => id !== contact.id));\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      text: \"Phonebook\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: formSubmitHendler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      text: \"Contacts\",\n      children: /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      elements: visibleContacts,\n      onDelete: deleteCont\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zedR6j/R5LmB/xzxRi6ha6H80Z8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/38097/Documents/goit-react-hw-04-phonebook/src/components/App.jsx"],"names":["React","useState","useEffect","nanoid","Form","ContactList","Section","Filter","App","contacts","setContacts","id","name","number","filter","setFilter","JSON","parse","localStorage","getItem","setItem","stringify","formSubmitHendler","contact","newContact","console","log","some","toLowerCase","alert","changeFilter","e","currentTarget","value","getVisibleContacts","normalizedFilter","includes","deleteCont","visibleContacts"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Form from './Form/Form';\nimport ContactList from './Contacts/ContactList';\nimport Section from './Section/Section';\nimport Filter from './Filter/Filter';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      setContacts(contacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  function formSubmitHendler(contact) {\n    const newContact = {\n      id: nanoid(),\n      name: contact.name,\n      number: contact.number,\n    };\n    console.log(newContact);\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    setContacts([newContact, ...contacts]);\n  }\n\n  function changeFilter(e) {\n    setFilter(e.currentTarget.value);\n  }\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteCont = id => {\n    setContacts(contacts.filter(contact => id !== contact.id));\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div>\n      <Section text=\"Phonebook\">\n        <Form onSubmit={formSubmitHendler} />\n      </Section>\n      <Section text=\"Contacts\">\n        <Filter value={filter} onChange={changeFilter} />\n      </Section>\n      <ContactList elements={visibleContacts} onDelete={deleteCont} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}