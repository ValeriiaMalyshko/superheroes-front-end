{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38097\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442 \\u0432\\u0438\\u043F\\u0443\\u0441\\u043A\\\\superhero\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { nanoid } from 'nanoid'; // import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nimport s from './Form.module.css'; // import { connect } from 'react-redux';\n\nimport { useCreateContactMutation, useFetchContactsQuery } from 'redux/contactsSlice';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormHero = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n  const [createContact] = useCreateContactMutation();\n  const {\n    data\n  } = useFetchContactsQuery();\n  const contacts = data;\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`There is something wrong`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    createContact({\n      name,\n      number\n    });\n    setName('');\n    setNumber('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: s.container,\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        id: \"inputGroup-sizing-default\",\n        children: \"Nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        \"aria-label\": \"Nickname\",\n        \"aria-describedby\": \"inputGroup-sizing-default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.btn,\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormHero, \"TQXCeBBERV+ZxHS31qUp3fCRqhs=\", false, function () {\n  return [useCreateContactMutation, useFetchContactsQuery];\n});\n\n_c = FormHero;\nexport default FormHero;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormHero\");","map":{"version":3,"sources":["C:/Users/38097/Desktop/проект випуск/superhero/src/components/Form/Form.js"],"names":["React","useState","nanoid","s","useCreateContactMutation","useFetchContactsQuery","Form","InputGroup","FormHero","name","setName","number","setNumber","nameInputId","numberInputId","createContact","data","contacts","handleChange","e","value","currentTarget","console","warn","handleSubmit","preventDefault","some","contact","toLowerCase","alert","container","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB,C,CACA;AACA;;AACA,OAAOC,CAAP,MAAc,mBAAd,C,CACA;;AACA,SACEC,wBADF,EAEEC,qBAFF,QAGO,qBAHP;AAIA,SAASC,IAAT,EAAeC,UAAf,QAAiC,iBAAjC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMY,WAAW,GAAGX,MAAM,EAA1B;AACA,QAAMY,aAAa,GAAGZ,MAAM,EAA5B;AAEA,QAAM,CAACa,aAAD,IAAkBX,wBAAwB,EAAhD;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAWX,qBAAqB,EAAtC;AACA,QAAMY,QAAQ,GAAGD,IAAjB;;AAEA,QAAME,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEV,MAAAA,IAAF;AAAQW,MAAAA;AAAR,QAAkBD,CAAC,CAACE,aAA1B;;AAEA,YAAQZ,IAAR;AACE,WAAK,MAAL;AACEC,QAAAA,OAAO,CAACU,KAAD,CAAP;AACA;;AAEF,WAAK,QAAL;AACER,QAAAA,SAAS,CAACQ,KAAD,CAAT;AACA;;AAEF;AACEE,QAAAA,OAAO,CAACC,IAAR,CAAc,0BAAd;AAVJ;AAYD,GAfD;;AAiBA,QAAMC,YAAY,GAAGL,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACM,cAAF;;AACA,QACER,QAAQ,CAACS,IAAT,CACEC,OAAO,IAAIA,OAAO,CAAClB,IAAR,CAAamB,WAAb,OAA+BnB,IAAI,CAACmB,WAAL,EAD5C,CADF,EAIE;AACAC,MAAAA,KAAK,CAAE,GAAEpB,IAAK,yBAAT,CAAL;AACA;AACD;;AACDM,IAAAA,aAAa,CAAC;AAAEN,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAAb;AACAD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAbD;;AAeA,sBACE;AAAM,IAAA,QAAQ,EAAEY,YAAhB;AAA8B,IAAA,SAAS,EAAErB,CAAC,CAAC2B,SAA3C;AAAA,4BA8BE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,8BACE,QAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,EAAE,EAAC,2BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD,CAAM,OAAN;AACE,sBAAW,UADb;AAEE,4BAAiB;AAFnB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF,eAwCE;AAAQ,MAAA,SAAS,EAAE3B,CAAC,CAAC4B,GAArB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CAxFD;;GAAMvB,Q;UAMoBJ,wB,EACPC,qB;;;KAPbG,Q;AA0FN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n// import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport s from './Form.module.css';\r\n// import { connect } from 'react-redux';\r\nimport {\r\n  useCreateContactMutation,\r\n  useFetchContactsQuery,\r\n} from 'redux/contactsSlice';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\n\r\nconst FormHero = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n\r\n  const [createContact] = useCreateContactMutation();\r\n  const { data } = useFetchContactsQuery();\r\n  const contacts = data;\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        console.warn(`There is something wrong`);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      contacts.some(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    createContact({ name, number });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.container}>\r\n      {/* <label htmlFor={nameInputId} className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label htmlFor={numberInputId} className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n        />\r\n      </label> */}\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n          Nickname\r\n        </InputGroup.Text>\r\n        <Form.Control\r\n          aria-label=\"Nickname\"\r\n          aria-describedby=\"inputGroup-sizing-default\"\r\n        />\r\n      </InputGroup>\r\n\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormHero;\r\n"]},"metadata":{},"sourceType":"module"}