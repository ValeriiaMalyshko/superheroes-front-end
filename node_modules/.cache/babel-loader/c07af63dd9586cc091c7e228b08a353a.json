{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer'; // const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n//   logger,\n// ];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter']\n};\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer)\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }),\n  devTools: process.env.NODE_ENV === 'development'\n});\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["C:/Users/38097/Documents/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","logger","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","contactsReducer","contactsPersistConfig","key","blacklist","store","reducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","devTools","process","env","NODE_ENV","persistor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,oBAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,GAAG,EAAE,UADuB;AAE5BH,EAAAA,OAF4B;AAG5BI,EAAAA,SAAS,EAAE,CAAC,QAAD;AAHiB,CAA9B;AAMA,MAAMC,KAAK,GAAGf,cAAc,CAAC;AAC3BgB,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEd,cAAc,CAACS,qBAAD,EAAwBD,eAAxB;AADjB,GADkB;AAI3BO,EAAAA,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACjB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD,CALK;AAU3Ba,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAVR,CAAD,CAA5B;AAaA,MAAMC,SAAS,GAAGxB,YAAY,CAACa,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBW,SAAhB","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts-reducer';\r\n\r\n// const middleware = [\r\n//   ...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n//   }),\r\n//   logger,\r\n// ];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}