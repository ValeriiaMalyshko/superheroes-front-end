{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38097\\\\Documents\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\Filter\\\\Filter.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = _ref => {\n  let {\n    value,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: s.label,\n    children: [\"Find contacts by name\", /*#__PURE__*/_jsxDEV(\"input\", {\n      className: s.input,\n      type: \"text\",\n      name: \"filter\",\n      value: value,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Filter;\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value))\n});\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/38097/Documents/goit-react-hw-06-phonebook/src/components/Filter/Filter.js"],"names":["React","PropTypes","s","connect","changeFilter","Filter","value","onChange","label","input","mapStateToProps","state","contacts","filter","mapDispatchToProps","dispatch","e","target","propTypes","func","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,qBAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,8BAA7B;;;AAEA,MAAMC,MAAM,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD;AAAA,sBACb;AAAO,IAAA,SAAS,EAAEL,CAAC,CAACM,KAApB;AAAA,qDAEE;AACE,MAAA,SAAS,EAAEN,CAAC,CAACO,KADf;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,KAAK,EAAEH,KAJT;AAKE,MAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADa;AAAA,CAAf;;KAAMF,M;;AAaN,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,KAAK,EAAEK,KAAK,CAACC,QAAN,CAAeC;AADU,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCR,EAAAA,QAAQ,EAAES,CAAC,IAAID,QAAQ,CAACX,YAAY,CAACY,CAAC,CAACC,MAAF,CAASX,KAAV,CAAb;AADe,CAAL,CAAnC;;AAIAD,MAAM,CAACa,SAAP,GAAmB;AACjBX,EAAAA,QAAQ,EAAEN,SAAS,CAACkB,IAAV,CAAeC,UADR;AAEjBd,EAAAA,KAAK,EAAEL,SAAS,CAACoB,MAAV,CAAiBD;AAFP,CAAnB;AAIA,eAAejB,OAAO,CAACO,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CT,MAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts-actions';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={s.input}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n"]},"metadata":{},"sourceType":"module"}