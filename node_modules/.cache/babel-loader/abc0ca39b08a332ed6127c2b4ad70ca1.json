{"ast":null,"code":"import { combineReducers } from 'redux';\nimport types from './contacts-types';\n\nconst items = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n\n    case types.DELETE:\n      return state.filter(_ref => {\n        let {\n          id\n        } = _ref;\n        return id !== payload;\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst filter = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case types.FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["C:/Users/38097/Documents/goit-react-hw-06-phonebook/src/redux/contacts-reducer.js"],"names":["combineReducers","types","items","state","type","payload","ADD","DELETE","filter","id","FILTER"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,KAAK,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1B,EAA0B;AAAA,MAAtB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC/C,UAAQD,IAAR;AACE,SAAKH,KAAK,CAACK,GAAX;AACE,aAAO,CAAC,GAAGH,KAAJ,EAAWE,OAAX,CAAP;;AAEF,SAAKJ,KAAK,CAACM,MAAX;AACE,aAAOJ,KAAK,CAACK,MAAN,CAAa;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAYA,EAAE,KAAKJ,OAAnB;AAAA,OAAb,CAAP;;AAEF;AACE,aAAOF,KAAP;AARJ;AAUD,CAXD;;AAaA,MAAMK,MAAM,GAAG,YAAmC;AAAA,MAAlCL,KAAkC,uEAA1B,EAA0B;AAAA,MAAtB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAChD,UAAQD,IAAR;AACE,SAAKH,KAAK,CAACS,MAAX;AACE,aAAOL,OAAP;;AAEF;AACE,aAAOF,KAAP;AALJ;AAOD,CARD;;AAUA,eAAeH,eAAe,CAAC;AAC7BE,EAAAA,KAD6B;AAE7BM,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\r\nimport types from './contacts-types';\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}