{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { contactApi } from './heroessSlice';\nimport { createAction } from '@reduxjs/toolkit';\nimport { createReducer } from '@reduxjs/toolkit';\nexport const changeFilter = createAction('contacts/filter');\nconst filter = createReducer('', {\n  [changeFilter]: (_, _ref) => {\n    let {\n      payload\n    } = _ref;\n    return payload;\n  }\n});\nexport const store = configureStore({\n  reducer: {\n    [contactApi.reducerPath]: contactApi.reducer,\n    filter: filter\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(contactApi.middleware)\n});\nsetupListeners(store.dispatch);","map":{"version":3,"sources":["C:/Users/38097/Desktop/проект випуск/superhero/front-end/src/redux/store.js"],"names":["configureStore","setupListeners","contactApi","createAction","createReducer","changeFilter","filter","_","payload","store","reducer","reducerPath","middleware","getDefaultMiddleware","concat","dispatch"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,MAAMC,YAAY,GAAGF,YAAY,CAAC,iBAAD,CAAjC;AAEP,MAAMG,MAAM,GAAGF,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACC,YAAD,GAAgB,CAACE,CAAD;AAAA,QAAI;AAAEC,MAAAA;AAAF,KAAJ;AAAA,WAAoBA,OAApB;AAAA;AADe,CAAL,CAA5B;AAIA,OAAO,MAAMC,KAAK,GAAGT,cAAc,CAAC;AAClCU,EAAAA,OAAO,EAAE;AACP,KAACR,UAAU,CAACS,WAAZ,GAA0BT,UAAU,CAACQ,OAD9B;AAEPJ,IAAAA,MAAM,EAAEA;AAFD,GADyB;AAKlCM,EAAAA,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,GAAGC,MAAvB,CAA8BZ,UAAU,CAACU,UAAzC;AANgC,CAAD,CAA5B;AASPX,cAAc,CAACQ,KAAK,CAACM,QAAP,CAAd","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport { contactApi } from './heroessSlice';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/filter');\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactApi.reducerPath]: contactApi.reducer,\r\n    filter: filter,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware().concat(contactApi.middleware),\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n"]},"metadata":{},"sourceType":"module"}