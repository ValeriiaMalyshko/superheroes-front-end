{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38097\\\\Documents\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\Filter\\\\Filter.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Filter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      filter: ''\n    };\n    this.filterInputId = nanoid();\n\n    this.handleChange = e => {\n      const {\n        filter,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [filter]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        filter: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.nameInputId,\n        children: [\"Find contacts by name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"filter\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          value: this.state.filter,\n          onChange: this.handleChange,\n          id: this.filterInputId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Filter;","map":{"version":3,"sources":["C:/Users/38097/Documents/goit-react-hw-02-phonebook/src/components/Filter/Filter.js"],"names":["React","PropTypes","Filter","Component","state","filter","filterInputId","nanoid","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","render","nameInputId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,MAAN,SAAqBC,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BC,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE;AADF,KADqB;AAAA,SAK7BC,aAL6B,GAKbC,MAAM,EALO;;AAAA,SAO7BC,YAP6B,GAOdC,CAAC,IAAI;AAClB,YAAM;AAAEJ,QAAAA,MAAF;AAAUK,QAAAA;AAAV,UAAoBD,CAAC,CAACE,aAA5B;AAEA,WAAKC,QAAL,CAAc;AAAE,SAACP,MAAD,GAAUK;AAAZ,OAAd;AACD,KAX4B;;AAAA,SAa7BG,YAb6B,GAadJ,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACK,cAAF;AAEA,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKZ,KAAzB;AAEA,WAAKa,KAAL;AACD,KAnB4B;;AAAA,SAqB7BA,KArB6B,GAqBrB,MAAM;AACZ,WAAKL,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAvB4B;AAAA;;AAyB7Ba,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA,6BACE;AAAO,QAAA,OAAO,EAAE,KAAKM,WAArB;AAAA,yDAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAC,wHAHV;AAIE,UAAA,KAAK,EAAC,wIAJR;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,MANpB;AAOE,UAAA,QAAQ,EAAE,KAAKG,YAPjB;AAQE,UAAA,EAAE,EAAE,KAAKF;AARX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA3C4B;;AA8C/B,eAAeJ,MAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Filter extends Component {\r\n  state = {\r\n    filter: '',\r\n  };\r\n\r\n  filterInputId = nanoid();\r\n\r\n  handleChange = e => {\r\n    const { filter, value } = e.currentTarget;\r\n\r\n    this.setState({ [filter]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ filter: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Find contacts by name\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            value={this.state.filter}\r\n            onChange={this.handleChange}\r\n            id={this.filterInputId}\r\n          />\r\n        </label>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n"]},"metadata":{},"sourceType":"module"}