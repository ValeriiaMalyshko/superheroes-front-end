{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38097\\\\Documents\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\Contacts\\\\ContactList.js\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport Contact from './Contact';\nimport s from './Contact.module.css';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactList = _ref => {\n  let {\n    contacts,\n    onDeleteContact\n  } = _ref;\n\n  /*#__PURE__*/\n  _jsxDEV(\"ul\", {\n    className: s.ul,\n    children: contacts.map(_ref2 => {\n      let {\n        id,\n        name,\n        number\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Contact, {\n          id: id,\n          name: name,\n          number: number,\n          onDelete: () => onDeleteContact(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n}; // ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   onDelete: PropTypes.func.isRequired,\n// };\n// const getVisibleContacts = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getVisibleContacts(items, filter),\n// });\n\n\n_c = ContactList;\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id))\n});\n\nexport default connect(null, mapDispatchToProps)(ContactList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["C:/Users/38097/Documents/goit-react-hw-06-phonebook/src/components/Contacts/ContactList.js"],"names":["React","Contact","s","connect","deleteContact","ContactList","contacts","onDeleteContact","ul","map","id","name","number","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,8BAA9B;;;AAEA,MAAMC,WAAW,GAAG,QAAmC;AAAA,MAAlC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAkC;;AACrD;AAAA;AAAI,IAAA,SAAS,EAAEL,CAAC,CAACM,EAAjB;AAAA,cACGF,QAAQ,CAACG,GAAT,CAAa;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAAD;AAAA,0BACZ;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,EAAE,EAAEF,EADN;AAEE,UAAA,IAAI,EAAEC,IAFR;AAGE,UAAA,MAAM,EAAEC,MAHV;AAIE,UAAA,QAAQ,EAAE,MAAML,eAAe,CAACG,EAAD;AAJjC;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,EAAT;AAAA;AAAA;AAAA;AAAA,cADY;AAAA,KAAb;AADH;AAAA;AAAA;AAAA;AAAA;AAYD,CAbD,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;KAnCML,W;;AAqCN,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,eAAe,EAAEG,EAAE,IAAII,QAAQ,CAACV,aAAa,CAACM,EAAD,CAAd;AADO,CAAL,CAAnC;;AAIA,eAAeP,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCR,WAAlC,CAAf","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport Contact from './Contact';\r\nimport s from './Contact.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts-actions';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  <ul className={s.ul}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <Contact\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDelete={() => onDeleteContact(id)}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>;\r\n};\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//     })\r\n//   ).isRequired,\r\n//   onDelete: PropTypes.func.isRequired,\r\n// };\r\n// const getVisibleContacts = (allContacts, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return allContacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n\r\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n//   contacts: getVisibleContacts(items, filter),\r\n// });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactList);\r\n"]},"metadata":{},"sourceType":"module"}