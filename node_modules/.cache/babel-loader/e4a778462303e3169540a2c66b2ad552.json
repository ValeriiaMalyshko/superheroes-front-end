{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38097\\\\Documents\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\Contacts\\\\ContactList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Contact from './Contact';\nimport s from './Contact.module.css';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactList = _ref => {\n  let {\n    contacts,\n    onDeleteContact\n  } = _ref;\n\n  /*#__PURE__*/\n  _jsxDEV(\"ul\", {\n    className: s.ul,\n    children: contacts.map(_ref2 => {\n      let {\n        id,\n        name,\n        number\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Contact, {\n        id: id,\n        name: name,\n        number: number,\n        onDelete: onDeleteContact\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ContactList;\nContactList.protoTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired\n  }))\n}; // ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   onDelete: PropTypes.func.isRequired,\n// };\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(_ref3 => {\n    let {\n      name\n    } = _ref3;\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n};\n\nconst mapStateToProps = _ref4 => {\n  let {\n    contacts: {\n      items,\n      filter\n    }\n  } = _ref4;\n  return {\n    contacts: getVisibleContacts(items, filter)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["C:/Users/38097/Documents/goit-react-hw-06-phonebook/src/components/Contacts/ContactList.js"],"names":["React","PropTypes","Contact","s","connect","deleteContact","ContactList","contacts","onDeleteContact","ul","map","id","name","number","protoTypes","arrayOf","shape","string","isRequired","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","mapStateToProps","items","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,8BAA9B;;;AAEA,MAAMC,WAAW,GAAG,QAAmC;AAAA,MAAlC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAkC;;AACrD;AAAA;AAAI,IAAA,SAAS,EAAEL,CAAC,CAACM,EAAjB;AAAA,cACGF,QAAQ,CAACG,GAAT,CAAa;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAAD;AAAA,0BACZ,QAAC,OAAD;AAEE,QAAA,EAAE,EAAEF,EAFN;AAGE,QAAA,IAAI,EAAEC,IAHR;AAIE,QAAA,MAAM,EAAEC,MAJV;AAKE,QAAA,QAAQ,EAAEL;AALZ,SACOG,EADP;AAAA;AAAA;AAAA;AAAA,cADY;AAAA,KAAb;AADH;AAAA;AAAA;AAAA;AAAA;AAWD,CAZD;;KAAML,W;AAaNA,WAAW,CAACQ,UAAZ,GAAyB;AACvBP,EAAAA,QAAQ,EAAEN,SAAS,CAACc,OAAV,CACRd,SAAS,CAACe,KAAV,CAAgB;AACdL,IAAAA,EAAE,EAAEV,SAAS,CAACgB,MAAV,CAAiBC;AADP,GAAhB,CADQ;AADa,CAAzB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,kBAAkB,GAAG,CAACC,WAAD,EAAcC,MAAd,KAAyB;AAClD,QAAMC,gBAAgB,GAAGD,MAAM,CAACE,WAAP,EAAzB;AAEA,SAAOH,WAAW,CAACC,MAAZ,CAAmB;AAAA,QAAC;AAAET,MAAAA;AAAF,KAAD;AAAA,WACxBA,IAAI,CAACW,WAAL,GAAmBC,QAAnB,CAA4BF,gBAA5B,CADwB;AAAA,GAAnB,CAAP;AAGD,CAND;;AAQA,MAAMG,eAAe,GAAG;AAAA,MAAC;AAAElB,IAAAA,QAAQ,EAAE;AAAEmB,MAAAA,KAAF;AAASL,MAAAA;AAAT;AAAZ,GAAD;AAAA,SAAsC;AAC5Dd,IAAAA,QAAQ,EAAEY,kBAAkB,CAACO,KAAD,EAAQL,MAAR;AADgC,GAAtC;AAAA,CAAxB;;AAIA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpB,EAAAA,eAAe,EAAEG,EAAE,IAAIiB,QAAQ,CAACvB,aAAa,CAACM,EAAD,CAAd;AADO,CAAL,CAAnC;;AAIA,eAAeP,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,WAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from './Contact';\r\nimport s from './Contact.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts-actions';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  <ul className={s.ul}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <Contact\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDelete={onDeleteContact}\r\n      />\r\n    ))}\r\n  </ul>;\r\n};\r\nContactList.protoTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//     })\r\n//   ).isRequired,\r\n//   onDelete: PropTypes.func.isRequired,\r\n// };\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n"]},"metadata":{},"sourceType":"module"}