{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38097\\\\Documents\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\Form.js\";\nimport React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: ''\n    };\n    this.nameInputId = nanoid();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: this.nameInputId,\n      children: [\"\\u0418\\u043C\\u044F\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        value: this.state.name,\n        onChange: this.handleChange,\n        id: this.nameInputId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/38097/Documents/goit-react-hw-02-phonebook/src/components/Form.js"],"names":["React","Component","nanoid","Form","state","name","nameInputId","handleChange","e","value","currentTarget","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE;AADA,KADmB;AAAA,SAK3BC,WAL2B,GAKbJ,MAAM,EALO;;AAAA,SAO3BK,YAP2B,GAOZC,CAAC,IAAI;AAClB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBD,CAAC,CAACE,aAA1B;AAEA,WAAKC,QAAL,CAAc;AAAE,SAACN,IAAD,GAAQI;AAAV,OAAd;AACD,KAX0B;AAAA;;AAa3BG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAO,MAAA,OAAO,EAAE,KAAKN,WAArB;AAAA,oDAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,OAAO,EAAC,wHAHV;AAIE,QAAA,KAAK,EAAC,wIAJR;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IANpB;AAOE,QAAA,QAAQ,EAAE,KAAKE,YAPjB;AAQE,QAAA,EAAE,EAAE,KAAKD;AARX;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA7B0B;;AAgC7B,eAAeH,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n  };\r\n\r\n  nameInputId = nanoid();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <label htmlFor={this.nameInputId}>\r\n        Имя\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          id={this.nameInputId}\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}