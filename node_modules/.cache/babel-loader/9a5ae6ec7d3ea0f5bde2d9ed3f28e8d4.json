{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38097\\\\Documents\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Form from './Form/Form';\nimport ContactList from './Contacts/ContactList';\nimport Section from './Section/Section';\nimport Filter from './Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.formSubmitHendler = contact => {\n      const newContact = {\n        id: nanoid(),\n        name: contact.name,\n        number: contact.number\n      };\n      console.log(newContact);\n\n      if (this.state.contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase())) {\n        alert(`${contact.name} is already in contacts`);\n        return;\n      }\n\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [newContact, ...contacts]\n        };\n      });\n    };\n\n    this.changeFilter = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n    };\n\n    this.getVisibleContacts = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n\n    this.deleteCont = id => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => id !== contact.id)\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //  console.log('App componentDidUpdate');\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      console.log('Обновилось поле todos, записываю todos в хранилище');\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n\n    if (nextTodos.length > prevTodos.length && prevTodos.length !== 0) {\n      this.toggleModal();\n    }\n  }\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        text: \"Phonebook\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.formSubmitHendler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        text: \"Contacts\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          value: this.state.filter,\n          onChange: this.changeFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        elements: visibleContacts,\n        onDelete: this.deleteCont\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/38097/Documents/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["React","Component","nanoid","Form","ContactList","Section","Filter","App","state","contacts","id","name","number","filter","formSubmitHendler","contact","newContact","console","log","some","toLowerCase","alert","setState","changeFilter","e","currentTarget","value","getVisibleContacts","normalizedFilter","includes","deleteCont","prevState","componentDidMount","localStorage","getItem","parsedContacts","JSON","parse","componentDidUpdate","prevProps","nextContacts","prevContacts","setItem","stringify","nextTodos","length","prevTodos","toggleModal","render","visibleContacts"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Form from './Form/Form';\nimport ContactList from './Contacts/ContactList';\nimport Section from './Section/Section';\nimport Filter from './Filter/Filter';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //  console.log('App componentDidUpdate');\n\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      console.log('Обновилось поле todos, записываю todos в хранилище');\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n\n    if (nextTodos.length > prevTodos.length && prevTodos.length !== 0) {\n      this.toggleModal();\n    }\n  }\n\n  formSubmitHendler = contact => {\n    const newContact = {\n      id: nanoid(),\n      name: contact.name,\n      number: contact.number,\n    };\n    console.log(newContact);\n    if (\n      this.state.contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteCont = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => id !== contact.id),\n    }));\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <Section text=\"Phonebook\">\n          <Form onSubmit={this.formSubmitHendler} />\n        </Section>\n        <Section text=\"Contacts\">\n          <Filter value={this.state.filter} onChange={this.changeFilter} />\n        </Section>\n        <ContactList elements={visibleContacts} onDelete={this.deleteCont} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}